V5.0.0
------
- Ported to .NET Standard
- Changed Sample Application to .NET Core 3.1
- Ported Unit tests to .Net Core
- Added HTML Filter
- Added Stop Word Filtering 
- Added Numeric Word Filtering
- Added Configuration Settings

v4.0.7
------
- synced with RaptorDB v4.0.7
- * breaking changes to index files, please delete and reindex *

v4.0.5
-------
- synced code with RaptorDB v4.0.5
- lower memory usage tweeaks
- * breaking changes to index files, please delete and reindex *

v3.3.8
------
- bug fix search terms
- tokenizer breaks a.b.c words and numbers

v3.3.7
------
- synced code with RaptorDB v3.3.7
- changed FindDocuments() to generic
- fixed the ability to inherit from Document for your own properties
- fixed registry read IFilter on 64bit
- search fixes "microsoft -oracle +google -app*"
- extracted tokenizer to own class with better word parsing
- added build version with auto increment
- diversified log messages
- log level implementation

v2.2.1
------
- bug fix WAHBitArray

v2.2
----
- bug fix WAHBitArray
- code sync with RaptorDB

v2.1
----
- upgrade to fastJSON v2.0.15
- bug fix last word missing last character

v2.0
----
- updated and embedded fastjson v2.0.11 in the project
- post back code from RaptorDB
- thread safe locks updates
- bug fix logger threading
- restructured source code
- fixed sample form tab order
- added the ability for incremental indexing
- storing document file information for future checking

v1.5
----
- added support for wildcard characters (*,?)
- added support for AND (+) , NOT (-) queries

v1.4
----
- replaced WAHBitarray with v2
- ~9x bitmap save speed increase
- ** index must be rebuilt from previous version **

v1.3
----
- Bug fix bitarray operations

v1.2
----
- FindDocumentFileNames() for faster string only return
- Better word extractor ~19% smaller index
	- breaks up camel case compound words
	- ignores strings >60 chars and less than 2 chars

v1.1
----
- tweaked parameters and reduced index size by 46%
- speed increase bitmap index save 5x
- bug fix sample ui 
- bug fix bitarray resize
- thread safe internals
- code refactoring
- OptimizeIndex() implemented

v1.0
-----
- initial release